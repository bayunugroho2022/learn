name: Flutter CI

on:
  push:
    branches: [upload]

jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Fetch all history for all tags and branches
        run: |
          git config remote.origin.url https://x-access-token:${{ secrets.G_TOKEN }}@github.com/${{ github.repository }}
          git fetch --prune --depth=10000
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt

  build:
    name: Build APK and Create release
    needs: [version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Creating the key.properties file
        run: |
          echo keyPassword=${{ secrets.KEYSTORE_PASS }} > upload_store/android/key.properties
          echo storePassword=${{ secrets.KEYSTORE_KEY_PASS }} >> upload_store/android/key.properties
          echo keyAlias=${{ secrets.KEY_ALIAS }} >> upload_store/android/key.properties
      - name: Decode base64 key into a file
        run: echo ${{ secrets.KEYSTORE }} | base64 --decode > upload_store/android/app/key.jks
      - uses: subosito/flutter-action@v2
        with:
          channel: "beta"
        env:
          BUILD_DIR: upload_store
      - name: Create release
        run: cd upload_store && flutter build appbundle --release
      - name: Create a Release in GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "upload_store/build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab"
          token: ${{ secrets.GH_TOKEN }}
          tag: ${{ steps.gitversion.outputs.nuGetVersion }}
          commit: ${{ github.sha }}
      - name: Upload app bundle
        uses: actions/upload-artifact@v2
        with:
          name: appbundle
          path: upload_store/build/app/outputs/bundle/release/app-release.aab

  release:
    name: Release app to internal track
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get appbundle from artifacts
        uses: actions/download-artifact@v2
        with:
          name: appbundle
      - name: Release app to internal track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: com.bayunugroho404.example.upload_store
          releaseFiles: app-release.aab
          track: alpha
          status: completed
